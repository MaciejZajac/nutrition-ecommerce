[{"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\index.tsx":"1","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\app.tsx":"2","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\home\\HomePage.tsx":"3","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\layout\\Layout.tsx":"4","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\router.tsx":"5","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\product\\ProductPage.tsx":"6","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\product\\Product.tsx":"7","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\auth\\LoginPage.tsx":"8","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\auth\\RegisterPage.tsx":"9","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\layout\\TopMenu.tsx":"10","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\dashboard\\DashboardPage.tsx":"11","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\dashboard\\OrderTable.tsx":"12","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\dashboard\\ProductTable.tsx":"13","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\dashboard\\UserTable.tsx":"14","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\dashboard\\AddProductPage.tsx":"15","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\product\\ProductsPage.tsx":"16","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\product\\WearingsPage.tsx":"17"},{"size":151,"mtime":1612262973091,"results":"18","hashOfConfig":"19"},{"size":408,"mtime":1612266736837,"results":"20","hashOfConfig":"19"},{"size":4578,"mtime":1612269921883,"results":"21","hashOfConfig":"19"},{"size":512,"mtime":1612273352780,"results":"22","hashOfConfig":"19"},{"size":1185,"mtime":1612299056450,"results":"23","hashOfConfig":"19"},{"size":9930,"mtime":1612272814225,"results":"24","hashOfConfig":"19"},{"size":1395,"mtime":1612269921883,"results":"25","hashOfConfig":"19"},{"size":2200,"mtime":1612274032073,"results":"26","hashOfConfig":"19"},{"size":2477,"mtime":1612274105482,"results":"27","hashOfConfig":"19"},{"size":1368,"mtime":1612298087155,"results":"28","hashOfConfig":"19"},{"size":1242,"mtime":1612281255761,"results":"29","hashOfConfig":"19"},{"size":1006,"mtime":1612281839564,"results":"30","hashOfConfig":"19"},{"size":3140,"mtime":1612283921943,"results":"31","hashOfConfig":"19"},{"size":1048,"mtime":1612281253743,"results":"32","hashOfConfig":"19"},{"size":2062,"mtime":1612284859583,"results":"33","hashOfConfig":"19"},{"size":4794,"mtime":1612300511203,"results":"34","hashOfConfig":"19"},{"size":3723,"mtime":1612299323975,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"109esfe",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\index.tsx",[],["77","78"],"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\app.tsx",[],"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\home\\HomePage.tsx",[],"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\layout\\Layout.tsx",[],"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\router.tsx",[],"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\product\\ProductPage.tsx",["79"],"import {\r\n    Carousel,\r\n    Col,\r\n    Image,\r\n    List,\r\n    Rate,\r\n    Row,\r\n    Select,\r\n    Tabs,\r\n    Typography,\r\n    Form,\r\n    Button,\r\n    InputNumber,\r\n    Divider,\r\n    Comment,\r\n    PageHeader,\r\n} from 'antd';\r\nimport React, { useState } from 'react';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface IDetailProduct {\r\n    _id: string;\r\n    name: string;\r\n    imageUrl: string[];\r\n    description: string;\r\n    advantages: string[];\r\n    whyUse: string;\r\n    price: number;\r\n    rating: number;\r\n    flavor: string[];\r\n    advisedUsage: {\r\n        title: string;\r\n        text: string;\r\n    }[];\r\n    comments: {\r\n        _id: string;\r\n        text: string;\r\n        date: string;\r\n        userName: string;\r\n        givenRate: number;\r\n    }[];\r\n}\r\n\r\nconst obj: IDetailProduct = {\r\n    _id: '1',\r\n    name: 'Białko Serwatkowe (Impact Whey Protein)',\r\n    imageUrl: [\r\n        'https://s4.thcdn.com///productimg/1600/1600/10530943-5604726884979938.jpg',\r\n        'https://s4.thcdn.com///productimg/1600/1600/10530943-1504726884876366.jpg',\r\n    ],\r\n    description: `Wykonana z najlepszej serwatki, jedna porcja zawiera aż 21g białka, w przypadku protein potrzebujesz ich ze źródła wysokiej jakości – od tych samych krów,\r\n     które dostarczają nam mleko i ser. Poddana jest zwykłemu \r\n     procesowi filtracji oraz suszeniu opryskowemu tworząc w ten\r\n      sposób zupełnie naturalną odżywkę.`,\r\n    advantages: ['21g białka w każdej porcji', '4,5g BCAA', 'Niska zawartość cukru'],\r\n    whyUse: `\r\n    Wygodne, wysokiej jakości białko wspomaga wzrost i utrzymanie masy ważnych mięśni1 — w każdej porcji zawiera tylko 1,9g tłuszczu, 1g węglowodanów oraz jedynie 103 kalorie, aby wspierać wszystkie Twoje cele treningowe.\r\n    Zawiera również niezbędne aminokwasy, w tym 4,5g aminokwasy BCAA — naturalnie występujące w białku, które pomagają w budowie i regeneracji mięśni1  — dzięki temu zawsze będziesz w gotowości na kolejny trening.\r\n    `,\r\n    price: 39.0,\r\n    rating: 5,\r\n    flavor: ['czekolada', 'ciastko', 'wanilia'],\r\n    advisedUsage: [\r\n        {\r\n            title: 'Kiedy przyjmować Białko Serwatkowe (Impact Whey Protein)?',\r\n            text:\r\n                'Jest to odżywka szybko przyswajalna, dlatego zalecamy spożywanie jej 30-60 minut po treningu, ale jest też doskonała o dowolnej porze dnia, aby uzupełnić niezbędne białko. Dodaj 1 miarkę (25g) do mleka pełnego lub wody.',\r\n        },\r\n\r\n        {\r\n            title: 'Z czym stosować Białko Serwatkowe (Impact Whey Protein)?',\r\n            text:\r\n                \"Aby pomóc Ci przejść przez nawet najtrudniejsze treningi dodaj miarkę  Monohydratu Kreatyny do Twojego shake'a – kreatyna ma udowodniony pozytywny wpływ na zwiększanie wydolności fizycznej podczas powtarzania serii krótkotrwałych i intensywnych ćwiczeń.\",\r\n        },\r\n    ],\r\n    comments: [\r\n        {\r\n            _id: '1',\r\n            text:\r\n                'To moje ulubione białko, wcześniej kupowałam biało dwóch innych firm, zostaję przy tym. Smak słony karmel póki co najbardziej mi odpowiada, polecam jak najbardziej!',\r\n            date: '25.01.2020',\r\n            userName: 'Magda',\r\n            givenRate: 4,\r\n        },\r\n\r\n        {\r\n            _id: '2',\r\n            text:\r\n                'Mega dobra rozpuszczalnosc, nie jest przeslodzone w smaku jak wszystkie inne bialka. Smaki, ktorych wybor jest duzy naprawde sa wyraziste. Najlepsza bialko jakie do tej pory wyszlo na rynek i to za niewielka cene.',\r\n            date: '23.01.2020',\r\n            userName: 'Pieseł',\r\n            givenRate: 5,\r\n        },\r\n\r\n        {\r\n            _id: '3',\r\n            text:\r\n                'Jadłem to białko jeszcze mieszkając w UK w między czasie testując różne inne ale żadne nie dawało mi takich efektów jak Impact od MyProtein do tego genialny smak vanili dla Moich wybrednych kubków smakowych',\r\n            date: '21.01.2020',\r\n            userName: 'Brs',\r\n            givenRate: 4,\r\n        },\r\n    ],\r\n};\r\n\r\nconst ProductPage = () => {\r\n    const [product, setProduct] = useState<IDetailProduct>(obj);\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col\r\n                style={{ margin: '20px auto' }}\r\n                xs={{ span: 22, offset: 1 }}\r\n                sm={{ span: 20, offset: 2 }}\r\n                lg={{ span: 18, offset: 3 }}\r\n            >\r\n                <PageHeader onBack={() => window.history.back()} title={product.name} />\r\n                <Row gutter={24}>\r\n                    <Col\r\n                        xs={{ span: 22, offset: 1 }}\r\n                        sm={{ span: 16, offset: 0 }}\r\n                        md={{ span: 14, offset: 0 }}\r\n                        lg={{ span: 12, offset: 0 }}\r\n                    >\r\n                        <Carousel effect='fade'>\r\n                            {product.imageUrl.map((url) => (\r\n                                <Image src={url} alt='' />\r\n                            ))}\r\n                        </Carousel>\r\n\r\n                        <Tabs defaultActiveKey='1'>\r\n                            <TabPane tab='Opis' key='1'>\r\n                                {product.description}\r\n                            </TabPane>\r\n                            <TabPane tab='Zalety' key='2'>\r\n                                <List\r\n                                    size='large'\r\n                                    bordered\r\n                                    dataSource={product.advantages}\r\n                                    renderItem={(item) => <List.Item>{item}</List.Item>}\r\n                                />\r\n                            </TabPane>\r\n                            <TabPane tab='Dlaczego warto' key='3'>\r\n                                {product.whyUse}\r\n                            </TabPane>\r\n                            <TabPane tab='Zalecane stosowanie' key='4'>\r\n                                {product.advisedUsage.map((item) => {\r\n                                    return (\r\n                                        <div style={{ marginBottom: '8px' }}>\r\n                                            <Typography.Title level={4}>{item.title}</Typography.Title>\r\n                                            <Typography.Paragraph>{item.text}</Typography.Paragraph>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </TabPane>\r\n                        </Tabs>\r\n                    </Col>\r\n                    <Col\r\n                        xs={{ span: 22, offset: 1 }}\r\n                        sm={{ span: 8, offset: 0 }}\r\n                        md={{ span: 10, offset: 0 }}\r\n                        lg={{ span: 12, offset: 0 }}\r\n                    >\r\n                        <Typography.Title level={2}>{product.name}</Typography.Title>\r\n                        <Typography.Paragraph type='secondary'>\r\n                            Odżywka białkowa nr 1 w Wielkiej Brytanii – teraz w Twojej codziennej diecie\r\n                        </Typography.Paragraph>\r\n\r\n                        <Rate disabled defaultValue={product.rating} />\r\n\r\n                        <Form name='basic' initialValues={{ remember: true }} onFinish={onFinish}>\r\n                            <Form.Item\r\n                                label='Smak'\r\n                                name='flavour'\r\n                                rules={[{ required: true, message: 'Proszę wybrać smak' }]}\r\n                            >\r\n                                <Select placeholder='Smak' defaultActiveFirstOption style={{ width: '160px' }}>\r\n                                    {product.flavor.map((flav) => (\r\n                                        <Select.Option key={flav} value={flav}>\r\n                                            {flav}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label='Ilość' name='quantity'>\r\n                                <InputNumber min={1} max={10} />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button type='primary' htmlType='submit'>\r\n                                    Dodaj do kosztyka\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Divider />\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Typography.Title level={2}>Recenzje od klientów</Typography.Title>\r\n                        <Rate disabled defaultValue={product.rating} />\r\n                        <Typography.Text type='secondary'>128 recenzji</Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={{ span: 22, offset: 1 }} md={{ span: 12, offset: 0 }}>\r\n                        <List\r\n                            itemLayout='horizontal'\r\n                            dataSource={product.comments}\r\n                            renderItem={(prod) => (\r\n                                <>\r\n                                    <Comment author={prod.userName} content={prod.text} />\r\n                                    <Rate disabled defaultValue={prod.givenRate} style={{ fontSize: '16px' }} />\r\n                                    <Divider style={{ margin: '12px 0 8px' }} />\r\n                                </>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProductPage;\r\n","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\product\\Product.tsx",[],"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\auth\\LoginPage.tsx",["80","81","82","83"],"import React, { useContext, useState } from 'react';\r\nimport { Form, Input, Button, Checkbox, Typography, message, Row, Col } from 'antd';\r\n// import { UserContext } from '../../context/UserContext';\r\n\r\nconst LoginPage = () => {\r\n    // const { login } = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onFinish = (values: any) => {\r\n        setLoading(true);\r\n        try {\r\n            const { email, password } = values;\r\n            // login({ email, password, roleName: 'COMPANY' });\r\n            setLoading(false);\r\n        } catch (err) {\r\n            message.error('Coś się nie udało');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo: any) => {\r\n        // console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Row style={{ marginTop: '2rem' }}>\r\n            <Col xs={{ span: 22, offset: 1 }} sm={{ span: 12, offset: 6 }} lg={{ span: 8, offset: 8 }}>\r\n                <Form\r\n                    name='basic'\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Typography.Title level={2}>Logowanie</Typography.Title>\r\n                    <Form.Item\r\n                        label='Email'\r\n                        name='email'\r\n                        rules={[{ required: true, message: 'Please input your email!' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label='Password'\r\n                        name='password'\r\n                        rules={[{ required: true, message: 'Please input your password!' }]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type='primary' htmlType='submit' loading={loading}>\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\auth\\RegisterPage.tsx",["84","85"],"import React, { useState } from 'react';\r\nimport { Form, Input, Button, message, Row, Col, Typography } from 'antd';\r\n// import axios from 'axios';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\nconst RegisterPage = () => {\r\n    // const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onFinish = async (values: any) => {\r\n        setLoading(true);\r\n        try {\r\n            const { email, password } = values;\r\n            // await axios\r\n            //     .post(`/user/register`, {\r\n            //         email,\r\n            //         password,\r\n            //     })\r\n            //     .then((response) => response.data);\r\n            setLoading(false);\r\n            message.success('Udało się stworzyć użytkownika');\r\n\r\n            // history.push('/login');\r\n        } catch (err) {\r\n            message.error('Coś się nie udało');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo: any) => {\r\n        // console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Row style={{ marginTop: '2rem' }}>\r\n            <Col xs={{ span: 22, offset: 1 }} sm={{ span: 12, offset: 6 }} lg={{ span: 8, offset: 8 }}>\r\n                <Typography.Title level={2}>Rejestracja</Typography.Title>\r\n                <Form\r\n                    name='basic'\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Form.Item\r\n                        label='Email'\r\n                        name='email'\r\n                        rules={[{ required: true, message: 'Please input your email!', type: 'email' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label='Hasło'\r\n                        name='password'\r\n                        rules={[{ required: true, message: 'Please input your password!' }]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type='primary' htmlType='submit' loading={loading}>\r\n                            Zarejestruj\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\layout\\TopMenu.tsx",[],"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\dashboard\\DashboardPage.tsx",[],"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\dashboard\\OrderTable.tsx",["86","87"],"import React from 'react';\r\nimport { Button, Table } from 'antd';\r\n\r\nconst OrderTable = () => {\r\n    return (\r\n        <div>\r\n            <Table dataSource={dataSource} columns={columns} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderTable;\r\n\r\nconst columns = [\r\n    {\r\n        title: 'ID',\r\n        dataIndex: 'key',\r\n        key: 'key',\r\n    },\r\n    {\r\n        title: 'Zamawiający',\r\n        dataIndex: 'orderedBy',\r\n        key: 'orderedBy',\r\n    },\r\n    {\r\n        title: 'Zrealizowano',\r\n        dataIndex: 'isComplete',\r\n        key: 'isComplete',\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'operation',\r\n        width: 100,\r\n        render: () => <a>action</a>,\r\n    },\r\n];\r\n\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        orderedBy: 'Karolina',\r\n        isComplete: 'Tak',\r\n    },\r\n    {\r\n        key: '2',\r\n        orderedBy: 'Magda',\r\n        isComplete: 'Nie',\r\n    },\r\n    {\r\n        key: '3',\r\n        orderedBy: 'Karol',\r\n        isComplete: 'Nie',\r\n    },\r\n];\r\n","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\dashboard\\ProductTable.tsx",[],"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\components\\dashboard\\UserTable.tsx",["88"],"import React from 'react';\r\nimport { Button, Table } from 'antd';\r\n\r\nconst UserTable = () => {\r\n    return (\r\n        <div>\r\n            <Table dataSource={dataSource} columns={columns} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserTable;\r\n\r\nconst columns = [\r\n    {\r\n        title: 'ID',\r\n        dataIndex: 'key',\r\n        key: 'key',\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n    },\r\n    {\r\n        title: 'Liczba zamówień',\r\n        dataIndex: 'ordersNumber',\r\n        key: 'ordersNumber',\r\n    },\r\n];\r\n\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        name: 'Karolina',\r\n        email: 'Karolina@gmail.com',\r\n        ordersNumber: 3,\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'Magda',\r\n        email: 'Magda@gmail.com',\r\n        ordersNumber: 1,\r\n    },\r\n    {\r\n        key: '3',\r\n        name: 'Karol',\r\n        email: 'Karol@gmail.com',\r\n        ordersNumber: 13,\r\n    },\r\n];\r\n","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\dashboard\\AddProductPage.tsx",["89","90"],"import { Col, message, Row, Form, Select, Input, InputNumber, Button, PageHeader } from 'antd';\r\nimport React, { useState } from 'react';\r\n\r\nconst AddProductPage = () => {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n    const onFinish = (values: any) => {\r\n        setLoading(true);\r\n        try {\r\n            const { email, password } = values;\r\n            // login({ email, password, roleName: 'COMPANY' });\r\n            setLoading(false);\r\n        } catch (err) {\r\n            message.error('Coś się nie udało');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo: any) => {\r\n        // console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={{ span: 22, offset: 1 }} sm={{ span: 16, offset: 4 }} lg={{ span: 12, offset: 6 }}>\r\n                <PageHeader onBack={() => window.history.back()} title='Dodaj nową ofertę' />\r\n                <Form\r\n                    name='basic'\r\n                    layout='vertical'\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Form.Item name='name' label='Nazwa'>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label='Kategoria' name='category'>\r\n                        <Select>\r\n                            <Select.Option value='demo'>Demo</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label='Cena' name='price'>\r\n                        <InputNumber />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type='primary' size='large' htmlType='submit' loading={loading}>\r\n                            Dodaj produt\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default AddProductPage;\r\n","C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\product\\ProductsPage.tsx",["91"],"C:\\Users\\Maciej\\Desktop\\alledrogo\\src\\pages\\product\\WearingsPage.tsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":108,"column":21,"nodeType":"98","messageId":"99","endLine":108,"endColumn":31},{"ruleId":"96","severity":1,"message":"100","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":27},{"ruleId":"96","severity":1,"message":"101","line":2,"column":31,"nodeType":"98","messageId":"99","endLine":2,"endColumn":39},{"ruleId":"96","severity":1,"message":"102","line":12,"column":21,"nodeType":"98","messageId":"99","endLine":12,"endColumn":26},{"ruleId":"96","severity":1,"message":"103","line":12,"column":28,"nodeType":"98","messageId":"99","endLine":12,"endColumn":36},{"ruleId":"96","severity":1,"message":"102","line":13,"column":21,"nodeType":"98","messageId":"99","endLine":13,"endColumn":26},{"ruleId":"96","severity":1,"message":"103","line":13,"column":28,"nodeType":"98","messageId":"99","endLine":13,"endColumn":36},{"ruleId":"96","severity":1,"message":"104","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":34,"column":23,"nodeType":"107","endLine":34,"endColumn":26},{"ruleId":"96","severity":1,"message":"104","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":16},{"ruleId":"96","severity":1,"message":"102","line":10,"column":21,"nodeType":"98","messageId":"99","endLine":10,"endColumn":26},{"ruleId":"96","severity":1,"message":"103","line":10,"column":28,"nodeType":"98","messageId":"99","endLine":10,"endColumn":36},{"ruleId":"96","severity":1,"message":"108","line":2,"column":38,"nodeType":"98","messageId":"99","endLine":2,"endColumn":43},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"@typescript-eslint/no-unused-vars","'setProduct' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Checkbox' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]